library(dplyr)
library(rio)
library(here)
setwd(here())
??drop_na
library(tidyr)
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28) %>% drop_na()
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
setwd(here())
here()
here()
migrants <- import('module2/migrant_entries_raw.xls')
setwd("C:/Users/hatze/giteando/dataviz0819/module2")
setwd("C:/Users/hatze/giteando/dataviz0819")
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28) %>% drop_na()
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
View(migrants)
?drop_na
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
migrants <- migrants %>% drop_na(Country)
View(migrants)
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
migrants <- migrants %>% drop_na(Country, 2005)
View(migrants)
colnames(migrants)
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
migrants <- migrants %>% drop_na_('Country', '2005')
View(migrants)
list_item <- 0
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
migrants <- migrants %>% drop_na(Country, '2005')
View(migrants)
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
View(migrants)
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 0
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[list_item] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
regions
migrants[1,]
source('C:/Users/hatze/giteando/dataviz0819/module2/clean_db.R', echo=TRUE)
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[list_item] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
regions
this_region
regions[[1]]
regions[[2]]
regions
head(migrants)
View(migrants)
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[list_item] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
View(migrants)
setwd("C:/Users/hatze/giteando/dataviz0819")
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[list_item] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
migrants
regions
this_region
regions
regions[[9]] <- this_region
regions
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[list_item] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
print(this_region)
}
regions
regions[[2]]
regions[[10]]
regions[[4]]
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[[list_item]] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
print(this_region)
}
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[[list_item]] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
regions
names(regions)
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[[list_item]] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
regions[[1]] <- NULL
names(regions) <- available_regions
regions
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[[list_item]] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
list_item <- list_item + 1
this_region <- data.frame()
regions[[1]] <- NULL
names(regions) <- available_regions
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[[list_item]] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
regions[[list_item]] <- this_region
regions[[1]] <- NULL
names(regions) <- available_regions
regions
library(purrr)
regions %>% flatten_df(.id = available_regions)
regions %>% flatten_df(.id = region)
regions %>% flatten_df(.id = 'region')
regions %>% flatten_df()
regions
regions %>% flatten_dfr()
??add_column
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad')
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[[list_item]] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
regions[[list_item]] <- this_region
regions[[1]] <- NULL
names(regions) <- available_regions
# I add a column that indicates the region explicitly
for (i in 1:length(regions)) {
temp <- regions[[i]]
temp$region <- available_regions[i]
regions[[i]] <- temp
}
regions
migrants <- import('module2/migrant_entries_raw.xls')
# we get rid of the initial headers
migrants <- migrants %>% tail(-12) %>% head(-28)
# and change column names
colnames(migrants) <- c('Country', as.character(2005:2018), 'empty')
# get rid of unnecesary columns without values and of the rows with
# totals
migrants <- migrants %>%
drop_na(Country, '2005') %>%
filter(Country != 'Continente/ nacionalidad') %>%
select(-empty)
available_regions <- c('América del Norte', 'América Central',
'Islas del Caribe', 'América del Sur', 'Europa',
'Asia', 'Oceanía', 'África')
list_item <- 1
regions = list()
this_region <- data.frame()
for (i in 1:nrow(migrants)) {
if (migrants$Country[i] %in% available_regions)  {
regions[[list_item]] <- this_region
list_item <- list_item + 1
this_region <- data.frame()
next()
}
this_region <- rbind(this_region, migrants[i,])
}
regions[[list_item]] <- this_region
regions[[1]] <- NULL
names(regions) <- available_regions
# I add a column that indicates the region explicitly
for (i in 1:length(regions)) {
temp <- regions[[i]]
temp$region <- available_regions[i]
regions[[i]] <- temp
}
regions
rbind(regions)
bind_rows(regions)
export(bind_rows(regions), 'migrant_entries_clean.csv')
